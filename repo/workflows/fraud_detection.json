{
  "name": "Fraud Detections",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {
          "labelIds": [
            "INBOX",
            "Label_4395341220325084590"
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        1776
      ],
      "id": "23ea4624-ac23-43c3-8273-556b66186ddd",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "iLzpmOlCKzWPxzIT",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90a8d974-a610-4372-9ed1-8f1c762c53fb",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "38e90d71-fb5a-4133-880c-96e957915224",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d5d0a348-4f92-48b6-a19d-d18320fe84aa",
              "name": "subject",
              "value": "={{ $json.subject }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        1536
      ],
      "id": "5cb5bb6a-f1c3-4c9c-b54f-83878ea46b4b",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        480,
        1984
      ],
      "id": "663b1e40-aaa4-43f4-bf92-5ad2845f7c2d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Title: {{ $json.subject }}\nEmail body: {{ $json.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=YOU ARE AN INTELLIGENT EMAIL ANALYZER SPECIALIZED IN DETECTING CREDIT CARD PAYMENT EMAILS.\nYOUR TASK IS TO ANALYZE THE CONTENT OF A GIVEN EMAIL AND DETERMINE IF IT IS RELATED TO A CREDIT CARD PAYMENT.\n\nINSTRUCTIONS\n1️⃣ CLASSIFY THE EMAIL INTO ONE OF THESE CONFIDENCE LEVELS:\n  -\"High\" – Clearly a credit card payment (e.g., transaction alert, payment confirmation).\n  -\"Low\" – Not payment-related (e.g., marketing emails, security alerts, general banking updates).\n\n2️⃣ CONSIDER THE FOLLOWING FACTORS:\n  ✅ **Email Subject:** Does it mention “payment”, “transaction”, “due,” “charged,” or similar keywords?\n  ✅ **Email Body:** Does it confirm a transaction or mention a specific amount?\n  ✅ **Sender:** Is the email from a known bank or financial institution?\n\n3️⃣ RESPOND IN THE FOLLOWING JSON FORMAT:\n```json\n{\n  \"confidence\": \"high\" | \"medium\" | \"low\",\n  \"reason\": \"Detected keywords in subject & body\" | \"Sender is a bank\" | \"Does not match payment-related criteria\"\n}"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        448,
        1760
      ],
      "id": "f4036f5b-5a4d-459d-9cb0-d074eb59990b",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"confidence\": {\n\t\t\t\"type\": \"string\",\n            \"enum\": [\"high\", \"low\"]\n\t\t},\n\t\t\"reason\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n  \"required\": [\"confidence\", \"reason\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        1984
      ],
      "id": "e995e0be-5366-41c7-958a-74796bbd4367",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "409c9218-4558-4b05-b3ea-620c5be3574c",
              "leftValue": "={{ $json.output.confidence }}",
              "rightValue": "high",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "fc46f09d-75e4-4f2d-bd25-2f0b85b12b04",
              "leftValue": "={{ $json.output.confidence }}",
              "rightValue": "medium",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        848,
        1760
      ],
      "id": "3b20772b-c367-49cd-99fc-dd5384ec36c0",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Edit Fields').item.json.id }}",
        "labelIds": [
          "Label_4395341220325084590"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1072,
        1360
      ],
      "id": "c7896f04-5381-4f39-b016-f7f7f8cd7521",
      "name": "Add label to message",
      "webhookId": "e8f68b87-f8d3-4ca7-becd-62d84e9e34c3",
      "credentials": {
        "gmailOAuth2": {
          "id": "iLzpmOlCKzWPxzIT",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('Edit Fields').item.json.text }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"payment_details\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"amount\": {\n          \"type\": \"string\",\n          \"description\": \"The payment amount\"\n        }\n      }\n    },\n    \"transaction_date\": {\n      \"type\": \"string\",\n      \"format\": \"date\",\n      \"description\": \"The date the payment was made\"\n    },\n    \"merchant\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the merchant\"\n    },\n    \"payment_method\": {\n      \"type\": \"string\",\n      \"description\": \"The method of payment used\"\n    },\n    \"card_last_four\": {\n      \"type\": \"string\",\n      \"description\": \"The last 4 digits of the credit card used\"\n    }\n  },\n  \"required\": [\"amount\", \"transaction_date\", \"merchant\", \"payment_method\", \"card_last_four\"]\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        1072,
        1648
      ],
      "id": "620ad5b2-a829-490c-bbd6-0f278736a774",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1168,
        1872
      ],
      "id": "fc397272-76bc-46dd-8054-6a5817b841ac",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1168,
        2048
      ],
      "id": "504bb099-5625-4a7e-a490-e35c3709afed",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1jiRk-WtZrcOdkganFx0RYKvI3F-JyM4ZPqjANlqzNyQ",
          "mode": "list",
          "cachedResultName": "Card Payment",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jiRk-WtZrcOdkganFx0RYKvI3F-JyM4ZPqjANlqzNyQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1jiRk-WtZrcOdkganFx0RYKvI3F-JyM4ZPqjANlqzNyQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "payment_method": "={{ $json.output.payment_method }}",
            "card_last_four": "={{ $json.output.card_last_four }}",
            "merchant": "={{ $json.output.merchant }}",
            "transaction_date": "={{ $json.output.transaction_date }}",
            "amount ": "={{ $json.output.payment_details.amount }}"
          },
          "matchingColumns": [
            "amount "
          ],
          "schema": [
            {
              "id": "amount ",
              "displayName": "amount ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "transaction_date",
              "displayName": "transaction_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "merchant",
              "displayName": "merchant",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "card_last_four",
              "displayName": "card_last_four",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "payment_method",
              "displayName": "payment_method",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "justification",
              "displayName": "justification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1568,
        1760
      ],
      "id": "ea41b446-abd2-4839-8cc4-67c515981f60",
      "name": "Append or update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bObtDbqRv0zFSung",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Card Transaction Details\n\nAmount:  {{ $json['amount '] }}\nTransaction Date: {{ $json.transaction_date }}\nMerchant: {{ $json.merchant }}\nPayment Method: {{ $json.payment_method }}\nCard Last Four Digits: {{ $json.card_last_four }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=📌 Overview\nYou are an AI-powered financial assistant responsible for:\n\nAnalyzing credit card transactions\nDetecting anomalies\nGathering merchant information\nProviding structured risk assessment\nYour job is to route tasks to the appropriate tools and format outputs properly for the Structured Output Parser.\n\n🛠 Tools & When to Use Them\n1️⃣ Pinecone Vector Store (Anomaly Detection)\nCompare the new transaction to historical spending.\nIdentify if the transaction is unusual compared to past patterns.\n\n2️⃣ Wikipedia Tool + SerpAPI (Merchant Lookup)\nIf a merchant is unknown, search Wikipedia first.\nIf no result is found, use SerpAPI to search the web.\nValidate if the merchant is a known business, subscription service, or fraudulent entity.\n\n3️⃣ Calculator (Math Operations)\nUse this tool for spending pattern calculations.\n\n🚦 Rules for Using Tools\n✅ Use Pinecone first to check if the transaction is anomalous.\n✅ Use Wikipedia for merchant search → if no result, use SerpAPI.\n✅ Ensure all outputs follow a structured format.\n\n🧪 Example Workflow\n📥 New Transaction Arrives\nInput: \"A $119.99 transaction from CANVA* I04417–839220 on 2025–02–04 was detected.\"*\nAction Taken:\n\nPinecone Vector Store → Check historical transactions.\nWikipedia Tool → Lookup merchant.\nSerpAPI (if Wikipedia fails) → Get merchant details.\nAI outputs structured JSON to Output Parser.\n\n⏰ Final Reminders\nToday’s Date & Time: {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1904,
        1760
      ],
      "id": "8e724947-99ed-43c3-bdb0-e7348edcad5f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1872,
        1984
      ],
      "id": "ed2f2834-817b-4ed3-a637-1a5ba7185fb3",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Work with you data in Pinecone Vector Store",
        "pineconeIndex": {
          "__rl": true,
          "value": "card-transactions",
          "mode": "list",
          "cachedResultName": "card-transactions"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        1712,
        1184
      ],
      "id": "6727fd90-78f0-4d39-8798-1819f3b0a9e3",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "pMvFmtsjnINcG0sX",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "dimensions": 512
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1808,
        1392
      ],
      "id": "2fffc958-e087-4468-a365-cdb03d9eda06",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"risk_level\": \"Low | Medium | High\",\n  \"anomaly_summary\": \"Short, clear summary of why this transaction is unusual\",\n  \"merchant_info\": {\n    \"merchant_name\": \"Extracted Name\",\n    \"merchant_category\": \"Subscription | Retail | Dining | Other\",\n    \"source\": \"Wikipedia | SerpAPI | No Data Found\"\n  },\n  \"detailed_analysis\": {\n    \"amount\": \"$XXX.XX\",\n    \"transaction_date\": \"YYYY-MM-DD\",\n    \"merchant\": \"Merchant Name\",\n    \"payment_method\": \"Visa | Mastercard | Amex | Other\",\n    \"anomaly_reasons\": [\n      \"New merchant detected\",\n      \"Transaction amount is higher than usual\",\n      \"Uncommon category for this user\"\n    ]\n  },\n  \"recommendations\": [\n    {\n      \"options\": \"Verify transaction manually\",\n      \"action\": \"Check your Apple account for active subscriptions\"\n    },\n    {\n      \"options\": \"Report as fraud\",\n      \"action\": \"Contact Chase customer support\"\n    },\n    {\n      \"options\": \"Log transaction for future monitoring\",\n      \"action\": \"Store this in an external record\"\n    }\n  ]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2128,
        1984
      ],
      "id": "9b0acbfc-7a83-40ff-965e-36ff85446531",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "labelIds": [
          "Label_3144282303254007611"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3104,
        1632
      ],
      "id": "e80ef780-6266-413e-9e8e-3ba318a0cf32",
      "name": "Add label to message2",
      "webhookId": "fd0d1e99-3ef5-4481-91dc-f4852bb2082f",
      "credentials": {
        "gmailOAuth2": {
          "id": "iLzpmOlCKzWPxzIT",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"verdict\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"safe\",\n        \"phishing\"\n      ]\n    }\n  },\n  \"required\": [\"verdict\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1632,
        2464
      ],
      "id": "7b32998e-86cb-4e56-a7d6-3da29fae409f",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1504,
        2464
      ],
      "id": "8dd94b2d-9b73-4401-85d8-8581c90f7861",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Evaluate the safety of the following email.\n\nHere are the VirusTotal results for all URLs extracted from the email:\n\nURL 1:\n- Malicious: {{ $json.data.attributes.stats.malicious }}\n- Suspicious: {{ $json.data.attributes.stats.suspicious }}\n- Harmless: {{ $json.data.attributes.stats.harmless }}\n- Undetected: {{ $json.data.attributes.stats.undetected }}\n(Repeat for each URL)\n\nRespond only with:\n- \"safe\"\n- \"phishing\"",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a cybersecurity analyst AI. Your task is to evaluate if an email is phishing or safe based on VirusTotal scan results for all URLs found in the email. Be concise, objective, and prioritize detections labeled \"malicious\" or \"suspicious.\" If all URLs are clean, conclude that the email is likely safe. If any are malicious or suspicious, flag it as potentially phishing.\n"
        }
      },
      "id": "1daee722-d2c8-4f0e-9e2b-020c6323f7dd",
      "name": "Content Analysis",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1472,
        2240
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "curlImport": "",
        "httpVariantWarning": "",
        "method": "GET",
        "url": "=https://www.virustotal.com/api/v3/analyses/{{ $json.data.id }}",
        "": "",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "virusTotalApi",
        "provideSslCertificates": false,
        "sendQuery": true,
        "specifyQuery": "keypair",
        "queryParameters": {
          "parameters": [
            {
              "name": "resource",
              "value": "https://developers.virustotal.com/v2.0/reference/url-report"
            }
          ]
        },
        "sendHeaders": false,
        "sendBody": false,
        "options": {},
        "infoMessage": ""
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1168,
        2240
      ],
      "id": "ed2beb54-5e6c-446f-9cc0-3a462329f36d",
      "name": "VirusTotal HTTP Request1",
      "extendsCredential": "virusTotalApi",
      "credentials": {
        "virusTotalApi": {
          "id": "W5HRr76UMbxErrzk",
          "name": "VirusTotal account"
        }
      }
    },
    {
      "parameters": {
        "curlImport": "",
        "httpVariantWarning": "",
        "method": "POST",
        "url": "https://www.virustotal.com/api/v3/urls",
        "": "",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "virusTotalApi",
        "provideSslCertificates": false,
        "sendQuery": true,
        "specifyQuery": "keypair",
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.url }}"
            }
          ]
        },
        "sendHeaders": false,
        "sendBody": false,
        "options": {},
        "infoMessage": ""
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        848,
        2240
      ],
      "id": "12564ab4-44bf-406f-9035-75f1e9b9bad6",
      "name": "VirusTotal HTTP Request",
      "extendsCredential": "virusTotalApi",
      "credentials": {
        "virusTotalApi": {
          "id": "W5HRr76UMbxErrzk",
          "name": "VirusTotal account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.url }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "3dd6d7db-97a6-43d3-ba05-295a24269451",
      "name": "Has URL?",
      "type": "n8n-nodes-base.if",
      "position": [
        528,
        2240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Extract plain text and HTML\nconst text = $input.first().json.text || \"\";\nconst html = $input.first().json.textAsHtml || \"\";\n// Combine both sources\nconst content = `${text}\\n${html}`;\n\n// IOC Regexes\nconst urlRegex = /\\bhttps?:\\/\\/[^\\s<>\"')]+/gi;\nconst domainRegex = /\\b(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+(?:[a-z]{2,})\\b/gi;\nconst ipRegex = /\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b/g;\nconst emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g;\n\n// Run regex matches\nconst urls = content.match(urlRegex) || [];\nconst domains = content.match(domainRegex) || [];\nconst ips = content.match(ipRegex) || [];\nconst emails = content.match(emailRegex) || [];\n\n// Deduplicate\nconst dedup = arr => [...new Set(arr)];\n\nconst results = [];\n\n// Structure like ioc-finder output\ndedup(urls).forEach(url => {\n  try {\n    results.push({ json: { type: \"url\", url, domain: new URL(url).hostname }});\n  } catch (_) {\n    results.push({ json: { type: \"url\", url }});\n  }\n});\ndedup(domains).forEach(domain => {\n  results.push({ json: { type: \"domain\", domain }});\n});\ndedup(ips).forEach(ip => {\n  results.push({ json: { type: \"ip\", ip }});\n});\ndedup(emails).forEach(email => {\n  results.push({ json: { type: \"email\", email }});\n});\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        2240
      ],
      "id": "b5b840a2-121d-457b-98e9-29620a0f5253",
      "name": "Code",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34b9aa63-89e5-4145-b769-fc75ea93fd13",
              "leftValue": "={{ $json.output.verdict }}",
              "rightValue": "phishing",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2000,
        2240
      ],
      "id": "46535f79-d862-4af5-bc62-1c3c6eb83213",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "57688b24-dff6-49eb-a9b8-afd7bcf83734",
              "leftValue": "={{ $json.output.risk_level }}",
              "rightValue": "=Low",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2336,
        1760
      ],
      "id": "24ec5535-d650-4627-9c52-0b2cc28dacb7",
      "name": "If2"
    },
    {
      "parameters": {
        "sendTo": "harrychandratsjan@gmail.com",
        "subject": "Summary",
        "message": "={{ $json.data[1].output }}",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {
                "property": "=data"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        3856,
        1776
      ],
      "id": "f60cd837-a6e9-4eec-87ba-aca908837172",
      "name": "Send a message",
      "webhookId": "5bdefda4-0f66-44e2-9789-2efdfb683336",
      "alwaysOutputData": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "iLzpmOlCKzWPxzIT",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2560,
        2048
      ],
      "id": "a58a771a-1980-404e-bf5d-439e29badac2",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2784,
        2048
      ],
      "id": "c5f1bc1d-88cf-49c2-914f-64817de7c4fe",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "path": "detection"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 2,
      "position": [
        1952,
        944
      ],
      "id": "457e307e-1c65-4038-99a2-65edaaa0bc27",
      "name": "MCP Server Trigger",
      "webhookId": "aef59f5e-253b-49ea-9187-a4bf1e02d709"
    },
    {
      "parameters": {
        "sseEndpoint": "https://harryzxc.app.n8n.cloud/mcp/detection"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        2000,
        1984
      ],
      "id": "85126f8c-6799-4a0c-b9a2-8f60f03beba0",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        2032,
        1184
      ],
      "id": "58b29831-e44d-46ca-8445-251a0fcf4194",
      "name": "SerpAPI1",
      "credentials": {
        "serpApi": {
          "id": "7acTJVJOKgKKiGvA",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        2160,
        1184
      ],
      "id": "0d36a533-f69c-407d-91ac-cb8b9709b94e",
      "name": "Wikipedia1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2288,
        1184
      ],
      "id": "43234d21-0361-4d37-ba48-2e532c4e40c4",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Please generate a professional and concise HTML email summary based on the following extracted transaction analysis:\n\n- Risk Level: {{ $json.data[0].output.risk_level }}\n- Anomaly Summary: {{ $json.data[0].output.anomaly_summary }}\n\nMerchant Info:\n- Name: {{ $json.data[0].output.merchant_info.merchant_name }}\n- Category: {{ $json.data[0].output.merchant_info.merchant_category }}\n- Verified via: {{ $json.data[0].output.merchant_info.source }}\n\nPayment Details:\n- Amount: {{ $json.data[0].output.detailed_analysis.amount }}\n- Date: {{ $json.data[0].output.detailed_analysis.transaction_date }}\n- Method: {{ $json.data[0].output.detailed_analysis.payment_method }}\n\nAnomaly Reasons: {{ $json.data[0].output.detailed_analysis.anomaly_reasons[0] }}\n\nVerdict: {{ $json.data[1]?.output?.verdict || \"safe\" }}\n\nRecommendation:\n- Action: {{ $json.data[0].output.recommendations[0].action }}\n- Options: {{ $json.data[0].output.recommendations[0].options }}\n\nInstructions:\n- Return only a partial HTML block (no <html>, <head>, or <body> tags).\n- Use HTML elements like <h2>, <h3>, <ul>, <li>, <p>, and <strong>.\n- For the verdict, display:\n  - `<span style=\"color: red; font-weight: bold;\">🔴 Phishing</span>` if the verdict is phishing\n  - `<span style=\"color: green; font-weight: bold;\">🟢 Safe</span>` if the verdict is safe or missing\n- Visually separate sections using headings and spacing.\n- Do not wrap the entire message in <html> or <body> tags.\n",
        "options": {
          "systemMessage": "=You are a financial AI assistant that summarizes credit card transaction and phishing analysis results.\n\nYour task is to generate a complete HTML email message, ready to send to users. The message must:\n\n- Start with a short paragraph in full sentences explaining whether the transaction appears safe or fraudulent.\n- Use HTML formatting such as:\n  - <h2>, <h3>, <p>, <ul>, <li> for structure\n  - <strong> or <span style=\"color:red\"> for emphasis\n\nThe summary must include:\n- Risk level and anomaly summary\n- Merchant info (name, category, verification source)\n- Payment details (amount, date, method)\n- Verdict (safe or phishing)\n- Clear user-friendly recommendations\n\nMake it visually clear and scannable. Prioritize warnings and clarity if fraud is suspected."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        3008,
        2208
      ],
      "id": "f01d1f28-e7e0-4002-adb4-de74ee1fee1b",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        2976,
        2448
      ],
      "id": "700aff68-880f-4def-b1c7-b1b3381adc72",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "ncXSyZymijofcTZ5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const seen = new Set();\nconst unique = [];\n\nfor (const item of items) {\n  const verdict = item.json.output?.verdict;\n  if (!seen.has(verdict)) {\n    seen.add(verdict);\n    unique.push(item);\n  }\n}\n\nreturn unique;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2336,
        2240
      ],
      "id": "c40b7bb8-1815-4142-b41c-cd4026cda191",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "text",
        "options": {
          "fileName": "emailBody.txt"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2560,
        1312
      ],
      "id": "980af84c-9759-4195-aba6-a61e53a3a3a3",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hcti.io/v1/image",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $('Edit Fields').item.json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2dc85757-66ea-44bf-9acf-167ae5b5c486",
      "name": "Screenshot HTML",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2784,
        1312
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBasicAuth": {
          "id": "dISEMLb17kTE1bOb",
          "name": "Unnamed credential"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "options": {}
      },
      "id": "18d8aef3-6229-43ee-bd73-7f742c3ae598",
      "name": "Retrieve Screenshot",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3104,
        1312
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpBasicAuth": {
          "id": "dISEMLb17kTE1bOb",
          "name": "Unnamed credential"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3408,
        1776
      ],
      "id": "5f10d352-74ac-4f5f-83f1-976413d1d2e6",
      "name": "Merge1"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {
          "includeBinaries": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        3632,
        1776
      ],
      "id": "b0be0c12-79cd-4773-8b48-0066a0155db0",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "content": "## ClassifyEmailPaymentConfidence\n\nClassifies emails based on how likely they are related to credit card payments.\n\n**Inputs:** Email subject and body  \n**Output:** Confidence level (high, medium, low) and reason  \n**Use:** To detect payment-related emails and label them accordingly.\n",
        "height": 288,
        "width": 544
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        336,
        1424
      ],
      "typeVersion": 1,
      "id": "f0914a39-cca7-4ad3-a489-3c26fedd29bf",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## ExtractCardPaymentInfo\n\nExtracts payment details like amount, date, merchant, and card info from the email text.\n\n**Inputs:** Email body  \n**Output:** Structured transaction data  \n**Use:** To log card payments into a database or sheet.",
        "height": 240,
        "width": 352,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1184,
        1424
      ],
      "typeVersion": 1,
      "id": "febd0bb0-c3bc-4488-9eea-08eb6f2e2a1e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## AnalyzeTransactionRisk\n\nAnalyzes payment data for risks or anomalies and verifies merchant details.\n\n**Inputs:** Extracted transaction data  \n**Output:** Risk level, anomaly summary, merchant info, recommendations  \n**Use:** To assess transaction safety and validity.",
        "height": 224,
        "width": 368,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1840,
        1520
      ],
      "typeVersion": 1,
      "id": "9480e87e-5e13-4435-8a9c-459708607426",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## DetectPhishingViaVirusTotal\n\nScans URLs in emails using VirusTotal to detect phishing threats.\n\n**Inputs:** Email content  \n**Output:** Verdict (safe or phishing)  \n**Use:** To filter or warn about suspicious emails.\n",
        "height": 192,
        "width": 624,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        752,
        2400
      ],
      "typeVersion": 1,
      "id": "3b4da656-9020-4687-9826-964e8f562ad8",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## GenerateHtmlSummaryEmail\n\nCreates a clean HTML summary of a transaction and risk analysis.\n\n**Inputs:** Risk and phishing analysis results  \n**Output:** HTML block with visual indicators and recommendations  \n**Use:** To notify users with a formatted summary email.",
        "height": 256,
        "width": 368,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3072,
        2384
      ],
      "typeVersion": 1,
      "id": "b8cd14bb-3dfa-443a-ab56-d1f679e7313f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## HtmlToScreenshot\n\nConverts HTML email content into a screenshot image.\n\n**Inputs:** HTML text  \n**Output:** PNG image of rendered email  \n**Use:** For visual logging or sending email snapshots.",
        "height": 304,
        "width": 384,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2608,
        992
      ],
      "typeVersion": 1,
      "id": "9df9e87f-c503-4c91-aee3-dad7f5692235",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {
    "Aggregate": [
      {
        "json": {
          "data": [
            {
              "output": {
                "risk_level": "Low",
                "anomaly_summary": "Transaction value is considerably lower than previous transactions with Apple, which typically range in the hundreds.",
                "merchant_info": {
                  "merchant_name": "Apple",
                  "merchant_category": "Electronics/Software",
                  "source": "Wikipedia and SerpAPI search"
                },
                "detailed_analysis": {
                  "amount": "RM 3.90",
                  "transaction_date": "2025-07-12",
                  "merchant": "Apple",
                  "payment_method": "Touch ‘n Go eWallet 601****6188",
                  "anomaly_reasons": [
                    "Low transaction amount compared to historical transactions with Apple"
                  ]
                },
                "recommendations": [
                  {
                    "options": "Continue monitoring transactions with Apple for unusual patterns.",
                    "action": "No action required at this time."
                  }
                ]
              }
            }
          ]
        }
      }
    ],
    "Content Analysis": [
      {
        "json": {
          "output": {
            "verdict": "phishing"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      },
      {
        "json": {
          "output": {
            "verdict": "safe"
          }
        }
      }
    ]
  },
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Add label to message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Analysis": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Content Analysis",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Content Analysis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "VirusTotal HTTP Request1": {
      "main": [
        [
          {
            "node": "Content Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VirusTotal HTTP Request": {
      "main": [
        [
          {
            "node": "VirusTotal HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has URL?": {
      "main": [
        [
          {
            "node": "VirusTotal HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Has URL?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Add label to message2",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Screenshot HTML": {
      "main": [
        [
          {
            "node": "Retrieve Screenshot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Screenshot HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Screenshot": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cf04c636-ab98-4b90-a9cf-2935f8b4a24a",
  "meta": {
    "instanceId": "06dbd6bc43f752b2b2cfe678789bab3a6496540b79e110f577535415ddfbb89b"
  },
  "id": "FgD9CbKGzeJzh9Xr",
  "tags": []
}